// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js",
  binaryTargets = ["native", "debian-openssl-1.1.x"]
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model Todo {
  id        Int     @id @default(autoincrement())
  task      String
  completed Boolean @default(false)
  createdAt DateTime @default(now())
  completedAt DateTime?
  user      User?   @relation(fields: [userId], references: [id])
  userId    Int
  org       Org?    @relation(fields: [orgId], references: [id])
  orgId     Int?
}

// RFC SCIM Core User Schema Attributes: https://datatracker.ietf.org/doc/html/rfc7643#section-8.1interface
// active and externalId are required by Okta: https://developer.okta.com/docs/guides/scim-provisioning-integration-prepare/main/#basic-user-schema
model User {
  id       Int    @id @default(autoincrement())
  email    String
  password String?
  name String
  Todo     Todo[]
  org       Org?    @relation(fields: [orgId], references: [id])
  orgId     Int?
  externalId String?
  active   Boolean?
  comments ActivityComments[]
  activitylikes ActivityLikes[]
  @@unique([orgId, externalId])
}

model UserDateData {
  id       Int    @id @default(autoincrement())
  date     String
  timezone String
  userId   Int
  water    Int
  mood     Int
  @@unique([date, timezone, userId])
}

model Activity {
  id        Int    @id @default(autoincrement())
  title     String
  cardDesc  String
  longDesc  String
  tags      String
  likes     ActivityLikes[]
  comments  ActivityComments[]
}

model ActivityLikes {
  id       Int    @id @default(autoincrement())
  userId   Int
  user User @relation(fields: [userId], references: [id])
  activityId Int
  activity Activity @relation(fields: [activityId], references: [id])
  @@unique([userId, activityId])
}

model ActivityComments {
  id       Int    @id @default(autoincrement())
  comment String
  userId   Int
  user User @relation(fields: [userId], references: [id])
  activityId Int
  activity Activity @relation(fields: [activityId], references: [id])
  @@unique([userId, activityId])
}

model Org {
  id        Int     @id @default(autoincrement())
  domain    String  @unique
  issuer                 String @default("")
  authorization_endpoint String @default("")
  token_endpoint         String @default("")
  userinfo_endpoint      String @default("")
  client_id              String @default("")
  client_secret          String @default("")
  apikey                 String
  Todo     Todo[]
  User     User[]
}
